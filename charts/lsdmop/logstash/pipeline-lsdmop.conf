input {
  pipeline {
    address => "pipeline-lsdmop"
  }
}

filter {
  grok {
    patterns_dir => [ "/usr/share/logstash/config/patterns" ]
    named_captures_only => true
    match => {
      "message" => [
        "%{LSDO_BASIC_001}",
        "%{LSDO_BASIC_002}",
        "%{LSDO_BASIC_003}",
        "%{LSDO_BASIC_004}",
        "%{LSDO_BASIC_005}",
        "%{LSDO_BASIC_006}",
        "%{LSDO_BASIC_007}",
        "%{LSDO_BASIC_008}",
        "%{LSDO_BASIC_009}",
        "%{LSDO_BASIC_010}",
        "%{LSDO_BASIC_011}",
        "%{LSDO_BASIC_012}",
        "%{LSDO_BASIC_013}",
        "%{LSDO_BASIC_014}",
        "%{LSDO_BASIC_015}",
        "%{LSDO_BASIC_016}"
      ]
    }
  }
  if [log][level] {
    if [log][level] =~ /^([Dd]ebug|\[debug\]|[Dd])$/ {    
      mutate {
        update => { "[log][level]" => "DEBUG" }
      }
    } else if [log][level] =~ /^([Ii]nfo|\[info\]|[Ii])$/ {
      mutate {
        update => { "[log][level]" => "INFO" }
      }
    } else if [log][level] =~ /^(WARNING|[Ww]arning|[Ww]arn|\[warn\]|[Ww])$/ {
      mutate {
        update => { "[log][level]" => "WARN" }
      }
    } else if [log][level] =~ /^([Ee]rror|[Ee]rr|[Ee]r|\[error\]|[Ee])$/ {
      mutate {
        update => { "[log][level]" => "ERROR" }
      }
    }
  } else {
    mutate {
      add_field => { "[log][level]" => "INFO" }
    }
  }
}

output {
  if [kubernetes][namespace] =~ /^kube-.*/ or [kubernetes][namespace] =~ /^openshift.*/ or [kubernetes][namespace] =~ /^cattle-.*/ or [kubernetes][namespace] =~ /^pks-.*/ or [kubernetes][namespace] =~ /^default.*/ or [kubernetes][namespace] =~ /^ingress-.*/ or [kubernetes][namespace] =~ /^nginx-.*/ or [kubernetes][namespace] =~ /^fleet-.*/ or [kubernetes][namespace] =~ /^nfs-.*/ or [kubernetes][namespace] =~ /^quay-.*/ or [kubernetes][namespace] =~ /^istio-.*/ or [kubernetes][namespace] =~ /^argocd.*/ or [kubernetes][namespace] =~ /^velero.*/ or [kubernetes][namespace] =~ /^vault*/ {
    elasticsearch {
      hosts => [ "https://lsdmop-es-http:9200" ]
      ssl => true
      cacert => "/usr/share/logstash/certs/tls.crt"
      sniffing => false
      manage_template => false
      user => elastic
      password => "${ELASTIC_PASSWORD}"
      index => "%{[@metadata][beat]}-%{[@metadata][version]}-infra"
    }
  } else if [kubernetes][namespace] =~ /^lsdmop.*/ {
    elasticsearch {
      hosts => [ "https://lsdmop-es-http:9200" ]
      ssl => true
      cacert => "/usr/share/logstash/certs/tls.crt"
      sniffing => false
      manage_template => false
      user => elastic
      password => "${ELASTIC_PASSWORD}"
      index => "%{[@metadata][beat]}-%{[@metadata][version]}-lsdo"
    }
  } else {
    elasticsearch {
      hosts => [ "https://lsdmop-es-http:9200" ]
      ssl => true
      cacert => "/usr/share/logstash/certs/tls.crt"
      sniffing => false
      manage_template => false
      user => elastic
      password => "${ELASTIC_PASSWORD}"
      index => "%{[@metadata][beat]}-%{[@metadata][version]}-apps"
    }
  }
}