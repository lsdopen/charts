# Elastic Filebeat
{{- if .Values.lsdobserve.elastic.filebeat.enabled -}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Name }}
  labels:
    app.kubernetes.io/managed-by: Helm
  name: elastic-beat-autodiscover
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  - events
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elastic-beat-autodiscover-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: elastic-beat-autodiscover
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-filebeat
  namespace: {{ .Release.Name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-filebeat
---
apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: {{ .Release.Name }}-filebeat
spec:
  type: filebeat
  version: {{ .Values.lsdobserve.elastic.filebeat.version }}
  image: {{ .Values.lsdobserve.elastic.filebeat.image }}
  config:
    filebeat.inputs:
    - type: container
      close_inactive: 4h
      multiline:
        match: after
        negate: false
        pattern: '^[[:space:]]+|^Caused by:'
      paths:
      - /var/log/containers/*.log
      processors:
      - add_kubernetes_metadata:
          host: ${NODE_NAME}
          matchers:
          - logs_path:
              logs_path: /var/log/containers/
    output.logstash:
      hosts: ["lsdobserve-logstash:5044"]              
  daemonSet:
    podTemplate:
      spec:
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true
        serviceAccountName: {{ .Release.Name }}-filebeat
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
        containers:
        - env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          name: filebeat
          resources:
            requests:
              memory: 256Mi
              cpu: 10m
            limits:
              memory: 512Mi
              cpu: 200m
          volumeMounts:
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
        volumes:
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        tolerations: 
          - key: "node-role.kubernetes.io/controlplane"
            operator: "Exists"
            effect: "NoSchedule"
          - key: "node-role.kubernetes.io/etcd"
            operator: "Exists"
            effect: "NoExecute"
          - key: "node-role.kubernetes.io/master"
            operator: "Exists"
            effect: "NoSchedule"
{{- end }}
